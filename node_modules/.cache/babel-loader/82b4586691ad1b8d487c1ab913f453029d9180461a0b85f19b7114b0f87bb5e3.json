{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harsh\\\\Desktop\\\\project\\\\weather\\\\src\\\\components\\\\Box.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Apikey from './apiKey';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Box = _ref => {\n  _s();\n  let {\n    CityName\n  } = _ref;\n  const [pressure, setPressure] = useState(\"\");\n  const [humidity, setHumidity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [temperature, setTemperature] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [isValidCity, setIsValidCity] = useState(true); // New state variable for city validity\n\n  useEffect(() => {\n    const getData = async city => {\n      if (!city) return;\n      try {\n        const res = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=` + Apikey);\n        // console.log(res);\n\n        setHumidity(res.data.main.humidity);\n        setPressure(res.data.main.pressure);\n        setCountry(res.data.sys.country);\n        setCity(res.data.name);\n        setTemperature(res.data.main.temp);\n        setIsValidCity(true); // City is valid if API request is successful\n      } catch (err) {\n        // console.log(err);\n        setIsValidCity(false); // City is not valid if API request fails\n      }\n    };\n\n    getData(CityName);\n  }, [CityName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12 text-center mt-5 mb-5\",\n    children: isValidCity ?\n    /*#__PURE__*/\n    // Render weather box if city is valid\n    _jsxDEV(\"div\", {\n      className: \"shadow rounded resultBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"weatherIcon\",\n        src: \"https://cdn.jim-nielsen.com/ios/1024/weather-2019-02-07.png\",\n        alt: \"Weather Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"Weathercity\",\n        children: [\"City: \", city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Country: \", country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"Weathertemperature\",\n        children: [\"Temperature: \", (temperature - 273.15).toFixed(2), \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"Pressure: \", humidity, \"g.m-3\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"Humidity: \", pressure, \"Pa\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Render invalid city message if city is not valid\n    _jsxDEV(\"h5\", {\n      className: \"Weathercity\",\n      children: \"City Name not valid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Box, \"ELqbeggxzhMCLI13CUMfLI8oVV4=\");\n_c = Box;\nexport default Box;\nvar _c;\n$RefreshReg$(_c, \"Box\");","map":{"version":3,"names":["React","useEffect","useState","axios","Apikey","jsxDEV","_jsxDEV","Box","_ref","_s","CityName","pressure","setPressure","humidity","setHumidity","country","setCountry","temperature","setTemperature","city","setCity","isValidCity","setIsValidCity","getData","res","get","data","main","sys","name","temp","err","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/Harsh/Desktop/project/weather/src/components/Box.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Apikey from './apiKey';\r\n\r\nconst Box = ({ CityName }) => {\r\n  const [pressure, setPressure] = useState(\"\");\r\n  const [humidity, setHumidity] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [temperature, setTemperature] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [isValidCity, setIsValidCity] = useState(true); // New state variable for city validity\r\n\r\n  useEffect(() => {\r\n    const getData = async (city) => {\r\n      if (!city) return;\r\n      try {\r\n        const res = await axios.get(\r\n          `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=` + Apikey\r\n        );\r\n        // console.log(res);\r\n\r\n        setHumidity(res.data.main.humidity);\r\n        setPressure(res.data.main.pressure);\r\n        setCountry(res.data.sys.country);\r\n        setCity(res.data.name);\r\n        setTemperature(res.data.main.temp);\r\n        setIsValidCity(true); // City is valid if API request is successful\r\n      } catch (err) {\r\n        // console.log(err);\r\n        setIsValidCity(false); // City is not valid if API request fails\r\n      }\r\n    };\r\n\r\n    getData(CityName);\r\n  }, [CityName]);\r\n\r\n  return (\r\n    <div className=\"col-md-12 text-center mt-5 mb-5\">\r\n      {isValidCity ? ( // Render weather box if city is valid\r\n        <div className=\"shadow rounded resultBox\">\r\n          <img\r\n            className=\"weatherIcon\"\r\n            src=\"https://cdn.jim-nielsen.com/ios/1024/weather-2019-02-07.png\"\r\n            alt=\"Weather Icon\"\r\n          />\r\n          <h5 className=\"Weathercity\">City: {city}</h5>\r\n          <h4>Country: {country}</h4>\r\n          <h6 className=\"Weathertemperature\">\r\n            Temperature: {(temperature - 273.15).toFixed(2)}Â°C\r\n          </h6>\r\n          <h6>Pressure: {humidity}g.m-3</h6>\r\n          <h6>Humidity: {pressure}Pa</h6>\r\n        </div>\r\n      ) : (\r\n        // Render invalid city message if city is not valid\r\n        <h5 className=\"Weathercity\">City Name not valid</h5>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Box;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}